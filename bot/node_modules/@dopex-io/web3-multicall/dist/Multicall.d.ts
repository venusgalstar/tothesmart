import Web3 from 'web3';
import { Contract } from 'web3-eth-contract';
import { provider } from 'web3-core';
interface ConstructorArgs {
    chainId?: number;
    provider: provider;
    defaultBlock?: number | '';
    multicallAddress?: string;
}
export default class Multicall {
    web3: Web3;
    multicall: Contract;
    constructor({ chainId, provider, multicallAddress, defaultBlock, }: ConstructorArgs);
    aggregate(calls: any[], parameters?: {}): Promise<any>;
    getEthBalance(address: string): any;
    getBlockHash(blockNumber: string | number): any;
    getLastBlockHash(): any;
    getCurrentBlockTimestamp(): any;
    getCurrentBlockDifficulty(): any;
    getCurrentBlockGasLimit(): any;
    getCurrentBlockCoinbase(): any;
}
export {};
